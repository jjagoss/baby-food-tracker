name: Frontend CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4

      # Cache npm dependencies
      - name: Cache node modules
        uses: actions/cache@v4
        id: npm-cache
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # Cache Playwright browsers
      - name: Cache Playwright browsers
        uses: actions/cache@v4
        id: playwright-cache
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-playwright-

      # Cache build output
      - name: Cache build
        uses: actions/cache@v4
        id: build-cache
        with:
          path: |
            dist
            .vite
            node_modules/.vite
          key: ${{ runner.os }}-build-${{ hashFiles('src/**/*', 'public/**/*', 'index.html') }}
          restore-keys: |
            ${{ runner.os }}-build-

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      # Only install Playwright browsers if cache missed
      - name: Install Playwright browsers
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: npx playwright install --with-deps

      - name: Run ESLint
        run: npm run lint

      # Only build if cache missed
      - name: Build
        if: steps.build-cache.outputs.cache-hit != 'true'
        run: npm run build

      - name: Run Playwright tests
        run: npx playwright test

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

  # deploy:
  #   needs: test
  #   if: github.ref == 'refs/heads/main'
  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/checkout@v4

  #     # Restore build cache for deployment
  #     - name: Cache build
  #       uses: actions/cache@v4
  #       with:
  #         path: |
  #           dist
  #           .vite
  #           node_modules/.vite
  #         key: ${{ runner.os }}-build-${{ hashFiles('src/**/*', 'public/**/*', 'index.html') }}
  #         restore-keys: |
  #           ${{ runner.os }}-build-

  #     # Build only if cache missed
  #     - name: Build if needed
  #       if: steps.build-cache.outputs.cache-hit != 'true'
  #       run: |
  #         npm ci
  #         npm run build
      
  #     - name: Setup Flyctl
  #       uses: superfly/flyctl-actions/setup-flyctl@master

  #     - name: Deploy to Fly.io
  #       env:
  #         FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
  #       run: flyctl deploy --remote-only